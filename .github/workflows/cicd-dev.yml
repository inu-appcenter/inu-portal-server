name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '테스트코드 작성') && !contains(github.event.head_commit.message, '임시 작성')"


    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application.properties
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      - name: Create firebase_key.json
        id: create-json
        uses: jsdaniell/create-json@v1.2.3
        with:
          name: "firebase_key.json"
          json: ${{ secrets.FIREBASE_KEY }}
          dir: 'src/main/resources/'

      - uses: actions/upload-artifact@v4
        with:
          name: app-configs
          path: |
            ./src/main/resources/application.properties
            ./src/main/resources/firebase_key.json

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.TOKEN }}

      - name: Docker Image Build
        run: docker build --no-cache -t ${{ secrets.USERNAME }}/${{ secrets.PROJECT_NAME }}:dev .

      - name: DockerHub Push
        run: docker push ${{ secrets.USERNAME }}/${{ secrets.PROJECT_NAME }}:dev

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST_ADDRESS }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port : ${{ secrets.SERVER_PORT }}
          script: |
            docker stop ${{ secrets.APPLICATION_NAME }}-dev || true
            docker rm ${{ secrets.APPLICATION_NAME }}-dev || true
            docker rmi ${{ secrets.USERNAME }}/${{ secrets.PROJECT_NAME }}:dev || true
            docker pull ${{ secrets.USERNAME }}/${{ secrets.PROJECT_NAME }}:dev
            docker run -d \
              -p 8084:8080 \
              -e TZ=Asia/Seoul \
              -v ${{ secrets.MOUNT_PATH }}:/intip \
              --name ${{ secrets.APPLICATION_NAME }}-dev ${{ secrets.USERNAME }}/${{ secrets.PROJECT_NAME }}:dev
